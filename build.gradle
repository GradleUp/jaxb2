plugins {
  id 'wrapper'
  id "com.gradle.plugin-publish" version "0.12.0"
  id "com.cinnober.gradle.semver-git" version "2.4.0"
  id 'java-gradle-plugin'
}

wrapper {
  gradleVersion = '5.6.4'
}

pluginBundle {
  website = 'https://github.com/GradleUp/jaxb2'
  vcsUrl = 'https://github.com/GradleUp/jaxb2'
  description = 'Plugin for generating Java sources from XML schemas files.'
  tags = ['jaxb2', 'jaxb']

  plugins {
    jaxb2Plugin {
      id = 'com.gradleup.jaxb2'
      displayName = 'Gradle JAXB2 plugin'
    }
  }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.gradle.maven'

repositories {
  mavenCentral()
}

// START: For OSSRH
apply plugin: 'signing'

def javadocJar = tasks.register("javadocJar", Jar) {
  it.classifier = 'javadoc'
  it.from javadoc
}

def sourcesJar = tasks.register("sourcesJar", Jar) {
  it.classifier = 'sources'
  it.from sourceSets.main.allSource
}

artifacts {
  archives javadocJar, sourcesJar
}

def ossrhUsername = System.getenv("OSSRH_USER") ?: ""
def ossrhPassword = System.getenv("OSSRH_PASSWORD") ?: ""

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'Gradle jaxb2 plugin'
        packaging 'jar'
        description 'Gradle plugin for jaxb2'
        url 'https://github.com/GradleUp/jaxb2'
        group 'com.gradleup'

        scm {
          connection 'scm:git:https://github.com/GradleUp/jaxb2.git'
          developerConnection 'scm:git:https://github.com/GradleUp/jaxb2.git'
          url 'https://github.com/GradleUp/jaxb2/'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'deepy'
            name 'Alex Nordlund'
            email 'deep.alexander@gmail.com'
          }
        }
      }
    }
  }
}
// END: For OSSRH

dependencies {
  compile gradleApi()
  compile localGroovy()

  testCompile "org.hamcrest:hamcrest-core:1.3"
  testImplementation(platform("org.junit:junit-bom:5.6.2"))
  testImplementation("org.junit.jupiter:junit-jupiter-api")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
  testRuntimeOnly("org.junit.vintage:junit-vintage-engine")
  testImplementation "org.spockframework:spock-core:1.3-groovy-2.5"
  testImplementation "org.apache.commons:commons-io:1.3.2"
  testImplementation gradleTestKit()
}

test {
  useJUnitPlatform()
  minHeapSize = '128m'
  maxHeapSize = '512m'
}
